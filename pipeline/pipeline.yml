trigger:
- main

variables:
  - group: env-variables
  # Web app name
  - name: webAppName
    value: 'aml-feathr'
  # Agent VM image name
  - name: vmImageName
    value: 'ubuntu-latest'
  # Environment name
  - name: environmentName
    value: 'feathr-env'
  # Environment file path (.yml)
  - name: environmentPath
    value: 'pipeline/conda.yml'
  # Python version: 3.9.12
  - name: pythonVersion
    value: '3.9.12'
  # Resource group name
  - name: resourceGroup
    value: 'rizofeathr11'
  # AML workspace name name
  - name: workspaceName
    value: 'mlw-basicex-prod-202212150056'
  # ADO Service Connection name (set it up in the UI; it must have access to Service Principal used by Feathr)
  - name: AzDoServiceConnectionName
    value: 'ADOServiceConnection'
  # Path to data for the AML stage
  # - name: DataPath
  #   value: 'azureml://subscriptions/a6c2a7cc-d67e-4a1a-b765-983f08c0423a/resourcegroups/rizofeathr11/workspaces/mlw-basicex-prod-202212150056/datastores/workspaceblobstore/paths/LocalUpload/6bc06dfb068a45eff911b284aa1dd064/data.csv'

  # Project root folder. Point to the folder containing manage.py file.
  # projectRoot: $(System.DefaultWorkingDirectory)

stages:

- stage: Feathr
  displayName: Feathr stage
  jobs:

  - job: CreateEnvironment
    pool:
      vmImage: $(vmImageName)
    steps:
      # - task: UsePythonVersion@0
      #   inputs:
      #     versionSpec: '$(pythonVersion)'
      #   displayName: 'Use Python $(pythonVersion)'
      - script: |
          conda init powershell
          echo "Initiated the shell"
          bash
          conda activate feathr-env
          echo "Activated"
          echo $(conda env list)
          conda env create -n $(environmentName) --file $(environmentPath)
        displayName: Create Anaconda environment
  #     python create_environment.py
  # - script: |
  #     echo "HELLO!"
  #     ls -al
  #     conda init bash
  #     conda env create --file $(environmentPath)
  #     conda activate $(environmentName)
  # 
      - script: |
          conda init powershell
          conda activate feathr-env
          echo Good!
          # pip install -r $(requirementsPath) --use-deprecated=legacy-resolver
          # $(dataPath) = python pipeline/main.py --resource_prefix $(RESOURCE_PREFIX) --resource_group $(RESOURCE_GROUP) --azure_subscription_id $(AZURE_SUBSCRIPTION_ID) --azure_client_id $(AZURE_CLIENT_ID) --azure_tenant_id $(AZURE_TENANT_ID) --azure_client_secret $(AZURE_CLIENT_SECRET) --adls_key $(ADLS_KEY)
        displayName: Run Feathr
        # workingDirectory: $(projectRoot)
  
  # - job: RunFeathr
  #   dependsOn: CreateEnvironment
  #   pool:
  #     vmImage: $(vmImageName)
  #   steps:
  #   - script: |
  #       python pipeline/main.py
  #     workingDirectory: $(projectRoot)

- stage: AML
  displayName: 'AML'
  dependsOn: Feathr
  condition: succeeded()
  jobs:
  - job: AMLJob
    pool:
      vmImage: $(vmImageName)
    steps:
      # - task: UsePythonVersion@0
      #   inputs:
      #     versionSpec: '$(pythonVersion)'
      #   displayName: 'Use Python $(pythonVersion)'
      - script: |
          echo "Hi"
          conda init bash
          echo conda info | grep -i 'base environment'
          echo "Good"
          conda activate $(environmentName)
        displayName: Activate Anaconda environment

      # Ask Mufy about team access level SP.
      - task: AzureCLI@2
        displayName: 'Azure CLI'
        inputs:
          azureSubscription: '$(AzDoServiceConnectionName)'
          # scriptType: ps
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            #To install the Machine Learning CLI extension
            az extension remove -n azure-cli-ml
            az extension remove -n ml
            echo "Uninstalled old AzureML CLI."
            az extension add -n ml
            echo "Installed new AzureML CLI."
            az ml job create --file pipeline/aml_job.yml --resource-group $(resourceGroup) --workspace-name $(workspaceName)
          
