trigger:
- main

variables:
  # Azure Resource Manager connection created during pipeline creation
  # azureServiceConnectionId: '{{ azureServiceConnection.Id }}'
  # Web app name
  webAppName: 'aml-feathr'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  # Environment name
  environmentName: 'feathr-env'
  # Environment file path (.yml)
  environmentPath: './conda.yml'
  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)
  # Python version: 3.9.12
  pythonVersion: '3.9.12'
  resourceGroup: 'rizofeathr11'
  workspaceName: 'mlw-basicex-prod-202212150056'
  AzDoServiceConnectionName: 'ADOServiceConnection'

stages:
- stage: Feathr
  displayName: Feathr stage
  jobs:

  - job: CreateEnvironment
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    # - script: |
    #     python create_environment.py
    - script: |
        ls -al
        conda init bash
        conda create env -n $(environmentName) --file $(environmentPath)
        conda activate $(environmentName)
      workingDirectory: $(projectRoot)
  
  - job: RunFeathr
    dependsOn: CreateEnvironment
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - script: |
        python feathr.py
      workingDirectory: $(projectRoot)

- stage: AML
  displayName: 'AML'
  dependsOn: Feathr
  condition: succeeded()
  jobs:
  - job: AMLJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - task: AzureCLI@2
      displayName: 'Azure CLI'
      inputs:
        azureSubscription: '$(AzDoServiceConnectionName)'
        scriptType: ps
        scriptLocation: inlineScript
        inlineScript: |
          #To install the Machine Learning CLI extension
          az extension add -n azure-cli-ml
          az ml job create --file aml_job.yml --resource-group $(resourceGroup) --workspace-name $(workspaceName)
        

trigger:
- main

variables:
  GROUP: ${{ github.event.inputs.GROUP }}
  LOCATION: ${{ github.event.inputs.LOCATION }}
  WORKSPACE: ${{ github.event.inputs.WORKSPACE }}

jobs:
- job: create-mljob-job
  pool:
    vmImage: ubuntu-latest
  steps:
  - script: bash setup.sh
    workingDirectory: cli
    displayName: 'Setup'
  - script: bash cli/create-job.sh src/pipeline/pipeline.yml
    workingDirectory: cli
    displayName: 'Create Job'
    env:
      AZ_CREDS: $(AZ_CREDS)
  - task: AzureCLI@2
    displayName: 'Azure Login'
    inputs:
      azureSubscription: $(AZ_CREDS)
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: 'az login --service-principal -u $(APP_ID) -p $(PASSWORD) --tenant $(TENANT_ID)'
  - script: echo $(MLJOB_RUNID)
    displayName: 'Save Job Id'
    env:
      MLJOB_RUNID: ${{ steps.create-job-step.outputs.RUNID }}
  - script: echo $(MLJOB_RUNURI)
    displayName: 'Save Job URI'
    env:
      MLJOB_RUNURI: ${{ steps.create-job-step.outputs.RUNURI }}