trigger:
- main

variables:
  - group: env-variables
  # Azure Resource Manager connection created during pipeline creation
  # azureServiceConnectionId: '{{ azureServiceConnection.Id }}'
  # Web app name
  webAppName: 'aml-feathr'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  # Environment name
  # environmentName: 'feathr-env'
  # Environment file path (.yml)
  environmentPath: 'pipeline/conda.yml'
  requirementsPath: 'pipeline/requirements.txt'
  # Project root folder. Point to the folder containing manage.py file.
  projectRoot: $(System.DefaultWorkingDirectory)
  # Python version: 3.9.12
  pythonVersion: '3.9.12'
  resourceGroup: 'rizofeathr11'
  workspaceName: 'mlw-basicex-prod-202212150056'
  AzDoServiceConnectionName: 'ADOServiceConnection'

stages:
- stage: Feathr
  displayName: Feathr stage
  jobs:

  - job: CreateEnvironment
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    # - script: |
    #     python create_environment.py
    # - script: |
    #     echo "HELLO!"
    #     ls -al
    #     conda init bash
    #     conda env create --file $(environmentPath)
    #     conda activate $(environmentName)
    # 
    - script: |
        pip install -r $(requirementsPath) --use-deprecated=legacy-resolver
        python pipeline/main.py --resource_prefix $RESOURCE_PREFIX --azure_client_id $AZURE_CLIENT_ID --azure_tenant_id $AZURE_TENANT_ID --azure_client_secret $AZURE_CLIENT_SECRET
      workingDirectory: $(projectRoot)
  
  # - job: RunFeathr
  #   dependsOn: CreateEnvironment
  #   pool:
  #     vmImage: $(vmImageName)
  #   steps:
  #   - script: |
  #       python pipeline/main.py
  #     workingDirectory: $(projectRoot)

- stage: AML
  displayName: 'AML'
  dependsOn: Feathr
  condition: succeeded()
  jobs:
  - job: AMLJob
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Use Python $(pythonVersion)'

    - task: AzureCLI@2
      displayName: 'Azure CLI'
      inputs:
        azureSubscription: '$(AzDoServiceConnectionName)'
        scriptType: ps
        scriptLocation: inlineScript
        inlineScript: |
          #To install the Machine Learning CLI extension
          az extension add -n azure-cli-ml
          az ml job create --file aml_job.yml --resource-group $(resourceGroup) --workspace-name $(workspaceName)
        
